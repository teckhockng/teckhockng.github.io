<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Data Science Blog - Teck Hock Ng</title><link>https://teckhockng.github.io/blog/</link><description></description><lastBuildDate>Sun, 06 Oct 2019 00:00:00 -0400</lastBuildDate><item><title>Emoji2Vec</title><link>https://teckhockng.github.io/blog/emoji2vec.html</link><description>&lt;p&gt;&lt;a href="https://github.com/uclnlp/emoji2vec"&gt;Emoji2Vec&lt;/a&gt; is a Tensorflow model that can evaluate the correlation between a phrase and an emoji. The concept behind it is mapping emoji descriptions to a 300-dimensional &lt;code&gt;word2vec&lt;/code&gt; embeddings. You can train the model with your own word vectors but the codes are outdated by 3 years. So, I won't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Teck Hock Ng</dc:creator><pubDate>Sun, 06 Oct 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:teckhockng.github.io,2019-10-06:/blog/emoji2vec.html</guid><category>python</category></item><item><title>How to add interactive Altair charts to your GitHub pages</title><link>https://teckhockng.github.io/blog/how-to-add-interactive-altair-charts-to-github-pages.html</link><description>&lt;p&gt;Yesterday I tried to upload an interactive Altair chart that shows tooltip on hover to my GitHub blog but when I download it from the Jupyter notebook as markdown file, there's only &lt;code&gt;.png&lt;/code&gt; version of the chart. So, I found a workaround to have an interactive Altair on my website …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Teck Hock Ng</dc:creator><pubDate>Mon, 30 Sep 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:teckhockng.github.io,2019-09-30:/blog/how-to-add-interactive-altair-charts-to-github-pages.html</guid><category>python</category></item><item><title>How to use Dummy Regressor and Dummy Classifier</title><link>https://teckhockng.github.io/blog/dummy-regressor&amp;dummy-classifier.html</link><description>&lt;h2&gt;Dummy Regressor&lt;/h2&gt;
&lt;p&gt;There are 4 strategies we can use to as a predictor for the Dummy Regressor. &lt;br&gt;
&lt;li&gt; Mean(default) - Always use the mean of y_train as the prediction &lt;/li&gt;
&lt;li&gt; Median - Always use the median of y_train as the prediction &lt;/li&gt;
&lt;li&gt; Quantile - Use the y_train value of the percentile specified &lt;/li&gt;
&lt;li&gt; Constant - Only use …&lt;/li&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Teck Hock Ng</dc:creator><pubDate>Sun, 29 Sep 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:teckhockng.github.io,2019-09-29:/blog/dummy-regressor&amp;dummy-classifier.html</guid><category>python</category></item><item><title>Comparison Between Theil-Sen Regressor and Simple Linear Regression</title><link>https://teckhockng.github.io/blog/TheilSen-Regressor.html</link><description>&lt;h3&gt;Theil-Sen Regression&lt;/h3&gt;
&lt;h5&gt;Objectives: To show Theil-Sen Regression is more robust against outliers compared to Simple Linear Regression&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#import models and plotting tools&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.linear_model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TheilSenRegressor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LinearRegression&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cross_val_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;r2_score&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Teck Hock Ng</dc:creator><pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:teckhockng.github.io,2019-09-16:/blog/TheilSen-Regressor.html</guid><category>python</category></item></channel></rss>